//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package sharknado.project.weatherapp;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import sharknado.project.weatherapp.R.id;
import sharknado.project.weatherapp.R.layout;

public final class ExtendedForecast_
    extends ExtendedForecast
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.extended);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        App = WeatherAppGlobal_.getInstance();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ExtendedForecast_.IntentBuilder_ intent(Context context) {
        return new ExtendedForecast_.IntentBuilder_(context);
    }

    public static ExtendedForecast_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ExtendedForecast_.IntentBuilder_(fragment);
    }

    public static ExtendedForecast_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new ExtendedForecast_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        tvDay1 = ((TextView) hasViews.findViewById(id.tvDay1));
        tvHourlyDate = ((TextView) hasViews.findViewById(id.tvHourlyDate));
        tvLowTemp = ((TextView) hasViews.findViewById(id.tvLowTemp));
        tvHourlyConditions = ((TextView) hasViews.findViewById(id.tvHourlyConditions));
        ivDay3 = ((ImageView) hasViews.findViewById(id.ivDay3));
        tvHourlyTemp = ((TextView) hasViews.findViewById(id.tvHourlyTemp));
        sbHourly = ((SeekBar) hasViews.findViewById(id.sbHourly));
        mainImg = ((ImageView) hasViews.findViewById(id.mainImg));
        tvExtendedLocation = ((TextView) hasViews.findViewById(id.tvExtendedLocation));
        ivDay1 = ((ImageView) hasViews.findViewById(id.ivDay1));
        ivHourly = ((ImageView) hasViews.findViewById(id.ivHourly));
        tvDay2 = ((TextView) hasViews.findViewById(id.tvDay2));
        tvDailyForecast = ((TextView) hasViews.findViewById(id.tvDailyForecast));
        tvDay3 = ((TextView) hasViews.findViewById(id.tvDay3));
        ivDay2 = ((ImageView) hasViews.findViewById(id.ivDay2));
        tvHiTemp = ((TextView) hasViews.findViewById(id.tvHiTemp));
        ivDay4 = ((ImageView) hasViews.findViewById(id.ivDay4));
        tvDay5 = ((TextView) hasViews.findViewById(id.tvDay5));
        ivDay5 = ((ImageView) hasViews.findViewById(id.ivDay5));
        tvDay4 = ((TextView) hasViews.findViewById(id.tvDay4));
        tvDate = ((TextView) hasViews.findViewById(id.tvDate));
        {
            View view = hasViews.findViewById(id.Day1);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ExtendedForecast_.this.dayClicked(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.Day2);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ExtendedForecast_.this.dayClicked(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.Day3);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ExtendedForecast_.this.dayClicked(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.Day4);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ExtendedForecast_.this.dayClicked(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.Day5);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ExtendedForecast_.this.dayClicked(view);
                    }

                }
                );
            }
        }
        {
            final SeekBar view = ((SeekBar) hasViews.findViewById(id.sbHourly));
            if (view!= null) {
                view.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {


                    @Override
                    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                        ExtendedForecast_.this.onProgressChanged(seekBar, progress);
                    }

                    @Override
                    public void onStartTrackingTouch(SeekBar seekBar) {
                    }

                    @Override
                    public void onStopTrackingTouch(SeekBar seekBar) {
                    }

                }
                );
            }
        }
        afterViews();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<ExtendedForecast_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, ExtendedForecast_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), ExtendedForecast_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), ExtendedForecast_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

    }

}
