//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package sharknado.project.weatherapp;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.ListView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import sharknado.project.weatherapp.R.id;
import sharknado.project.weatherapp.R.layout;
import sharknado.project.weatherapp.adapter.currentWeatherAdapter_;
import sharknado.project.weatherapp.data.DataRestErrorHandler_;
import sharknado.project.weatherapp.data.Data_;
import sharknado.project.weatherapp.eventBus.weatherEventBus_;

public final class OpenAppScreen_
    extends OpenAppScreen
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_open_app_screen);
    }

    private void init_(Bundle savedInstanceState) {
        PrefsShared = new PrefsShared_(this);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        App = WeatherAppGlobal_.getInstance();
        restClientErrorHandler = DataRestErrorHandler_.getInstance_(this);
        bus = weatherEventBus_.getInstance_(this);
        adapter = currentWeatherAdapter_.getInstance_(this);
        restClient = new Data_(this);
        AfterInject();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static OpenAppScreen_.IntentBuilder_ intent(Context context) {
        return new OpenAppScreen_.IntentBuilder_(context);
    }

    public static OpenAppScreen_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new OpenAppScreen_.IntentBuilder_(fragment);
    }

    public static OpenAppScreen_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new OpenAppScreen_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        logInButton = ((Button) hasViews.findViewById(id.log_in_button));
        createAccount = ((Button) hasViews.findViewById(id.create_account_button));
        listCurrent = ((ListView) hasViews.findViewById(id.listCurrent));
        if (createAccount!= null) {
            createAccount.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    OpenAppScreen_.this.createAccount();
                }

            }
            );
        }
        if (logInButton!= null) {
            logInButton.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    OpenAppScreen_.this.login();
                }

            }
            );
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(sharknado.project.weatherapp.R.menu.dashboard, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int itemId_ = item.getItemId();
        if (itemId_ == id.search) {
            searchClicked();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public void getWeather() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    OpenAppScreen_.super.getWeather();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void updateWeather(final String newLocation) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    OpenAppScreen_.super.updateWeather(newLocation);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<OpenAppScreen_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, OpenAppScreen_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), OpenAppScreen_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), OpenAppScreen_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

    }

}
